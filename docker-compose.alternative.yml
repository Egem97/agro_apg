version: '3.8'

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: agro_postgres_alt
    restart: unless-stopped
    environment:
      - POSTGRES_DB=agro_db_prod
      - POSTGRES_USER=agro_user_prod
      - POSTGRES_PASSWORD=agro_password_secure_2024
    volumes:
      - postgres_data_alt:/var/lib/postgresql/data
    ports:
      - "5434:5432"  # Puerto alternativo para evitar conflictos
    networks:
      - agro_network_alt
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agro_user_prod -d agro_db_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Django
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: agro_backend_alt
    restart: unless-stopped
    ports:
      - "8002:8000"  # Puerto alternativo para evitar conflictos
    volumes:
      # Persistir archivos media
      - ./backend/media:/app/media:rw
      # Montar staticfiles como volumen nombrado para evitar problemas de permisos
      - staticfiles_data_alt:/app/staticfiles
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=agro_backend.settings_production
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3001,http://127.0.0.1:3001
      - POSTGRES_DB=agro_db_prod
      - POSTGRES_USER=agro_user_prod
      - POSTGRES_PASSWORD=agro_password_secure_2024
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    networks:
      - agro_network_alt
    depends_on:
      db:
        condition: service_healthy

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: agro_frontend_alt
    restart: unless-stopped
    ports:
      - "3001:3000"  # Puerto alternativo para evitar conflictos
    environment:
      - REACT_APP_API_URL=http://localhost:8002/api
      - NODE_ENV=production
    networks:
      - agro_network_alt

  # Nginx Reverse Proxy (Opcional)
  nginx:
    image: nginx:alpine
    container_name: agro_nginx_alt
    restart: unless-stopped
    ports:
      - "8081:80"    # Puerto alternativo para evitar conflictos
      - "8444:443"   # Puerto alternativo para evitar conflictos
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - agro_network_alt
    depends_on:
      - backend
      - frontend
    profiles:
      - production

networks:
  agro_network_alt:
    driver: bridge

volumes:
  postgres_data_alt:
  media_data_alt:
  staticfiles_data_alt:
