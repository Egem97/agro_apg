services:
  # Backend Django
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: agro_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      # Persistir la base de datos SQLite
      - ./backend/db.sqlite3:/app/db.sqlite3
      # Persistir archivos media
      - ./backend/media:/app/media
      # Persistir archivos estáticos
      - ./backend/staticfiles:/app/staticfiles
    environment:
      - DEBUG=False
      - DJANGO_SETTINGS_MODULE=agro_backend.settings
      - ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    networks:
      - agro_network

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: agro_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - NODE_ENV=production
    networks:
      - agro_network

  # Nginx Reverse Proxy (Opcional - para producción)
  nginx:
    image: nginx:alpine
    container_name: agro_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - agro_network
    depends_on:
      - backend
      - frontend
    profiles:
      - production

networks:
  agro_network:
    driver: bridge

volumes:
  db_data:
  media_data:
  static_data:
